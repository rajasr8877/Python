<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
    <inbound>
        <base />
        <set-method>PUT</set-method>
        <set-variable name="filename" value="@(context.Request.Headers.GetValueOrDefault("filename", "").Substring(context.Request.Headers.GetValueOrDefault("filename", "").LastIndexOf("/") + 1))" />
        <set-header name="x-ms-version" exists-action="override">
            <value>2020-02-10</value>
        </set-header>
        <set-header name="Authorization" exists-action="delete" />
        <set-backend-service base-url="@(string.Format("https://{{storageAccountName}}.blob.core.windows.net/files/{0}?comp=blocklist&{{SASToken}}", context.Variables.GetValueOrDefault("filename")))" />
        <rewrite-uri template="?" />
    </inbound>
    <backend>
        <forward-request timeout="600" />
    </backend>
    <outbound>
        <base />
        <choose>
            <when condition="@(context.Response.StatusCode == 201)">
                <return-response>
                    <set-status code="200" reason="Ok" />
                    <set-body template="liquid">
                {
                    "statusCode": 200,
                    "message": "Ok, File uploaded successfully."
                }</set-body>
                </return-response>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>